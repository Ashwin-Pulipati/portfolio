{"version":3,"file":"static/js/8920.6bd5c73d.chunk.js","mappings":"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","sources":["components/resume/components/embla-carousel-scale/EmblaCarouselArrowButtons.jsx","components/resume/components/embla-carousel-scale/EmblaCarouselDotButton.jsx","components/resume/components/embla-carousel-scale/EmblaCarousel.jsx","../node_modules/embla-carousel-auto-scroll/src/components/Options.ts","../node_modules/embla-carousel-auto-scroll/src/components/AutoScroll.ts","../node_modules/embla-carousel-auto-scroll/src/components/utils.ts","components/resume/components/embla-carousel-autoscroll/EmblaCarousel.jsx","components/resume/components/CertificationsModal.jsx","components/resume/components/CertificationsCard.jsx","components/resume/components/Certifications.jsx"],"sourcesContent":["// EmblaCarouselArrowButtons.jsx\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nexport const usePrevNextButtons = (emblaApi) => {\n  const [prevBtnDisabled, setPrevBtnDisabled] = useState(true);\n  const [nextBtnDisabled, setNextBtnDisabled] = useState(true);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n\n    const onSelect = () => {\n      setPrevBtnDisabled(!emblaApi.canScrollPrev());\n      setNextBtnDisabled(!emblaApi.canScrollNext());\n    };\n\n    onSelect();\n    emblaApi.on(\"reInit\", onSelect).on(\"select\", onSelect);\n\n    return () => {\n      emblaApi.off(\"reInit\", onSelect).off(\"select\", onSelect);\n    };\n  }, [emblaApi]);\n\n  const onPrevButtonClick = useCallback(() => emblaApi?.scrollPrev(), [\n    emblaApi,\n  ]);\n  const onNextButtonClick = useCallback(() => emblaApi?.scrollNext(), [\n    emblaApi,\n  ]);\n\n  return {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick,\n  };\n};\n\nexport const PrevButton = React.memo(({ onClick, disabled }) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    aria-label=\"Previous\"\n    className={`relative p-0.5 rounded-full hoverFocusGradient elevatedShadow disabled:opacity-50 pointer-events-auto focus:outline-none`}\n  >\n    <span\n      className={`w-[3.2rem] h-[3.2rem] cardGradient rounded-full flex items-center justify-center arrowIcon ${\n        disabled ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-gray-100\"\n      } transition`}\n    >\n      <svg\n        className=\"w-5 h-5 md:w-1/2 md:h-1/2 arrowIcon\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M15 18l-6-6 6-6\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    </span>\n  </button>\n));\n\nexport const NextButton = React.memo(({ onClick, disabled }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    disabled={disabled}\n    aria-label=\"Next\"\n    className=\"relative p-0.5 rounded-full hoverFocusGradient elevatedShadow disabled:opacity-50 pointer-events-auto focus:outline-none\"\n  >\n    <span\n      className=\"w-[3.2rem] h-[3.2rem] cardGradient rounded-full flex items-center justify-center arrowIcon transition\"\n      style={{\n        opacity: disabled ? 0.5 : 1,\n        cursor: disabled ? \"not-allowed\" : \"pointer\",\n      }}\n    >\n      <svg\n        className=\"w-5 h-5 md:w-1/2 md:h-1/2 arrowIcon\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M9 6l6 6-6 6\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    </span>\n  </button>\n));\n","// EmblaCarouselDotButton.jsx\n\nimport React from \"react\";\n\nexport const DotButton = React.memo(({ className = \"\", style = {}, ...props }) => (\n  <button type=\"button\" className={className} style={style} {...props} />\n));\n\nexport const useDotButton = (emblaApi) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [scrollSnaps, setScrollSnaps] = React.useState([]);\n\n  const onDotButtonClick = React.useCallback(\n    (index) => emblaApi?.scrollTo(index),\n    [emblaApi]\n  );\n\n  React.useEffect(() => {\n    if (!emblaApi) return;\n\n    setScrollSnaps(emblaApi.scrollSnapList());\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n    const onSelect = () => setSelectedIndex(emblaApi.selectedScrollSnap());\n    emblaApi.on(\"select\", onSelect);\n    return () => emblaApi.off(\"select\", onSelect);\n  }, [emblaApi]);\n\n  return {\n    selectedIndex,\n    scrollSnaps,\n    onDotButtonClick,\n  };\n};\n","// EmblaCarouselAutoScale.jsx\n\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport {\n  NextButton,\n  PrevButton,\n  usePrevNextButtons,\n} from \"./EmblaCarouselArrowButtons\";\nimport { DotButton, useDotButton } from \"./EmblaCarouselDotButton\";\nimport { useDarkMode } from \"../../../layouts/DarkMode\";\n\nconst TWEEN_FACTOR_BASE = 0.52;\nconst numberWithinRange = (number, min, max) =>\n  Math.min(Math.max(number, min), max);\n\nconst EmblaCarousel = ({ options, children }) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(options);\n  const tweenFactorRef = useRef(0);\n  const tweenNodesRef = useRef([]);\n  const isDarkMode = useDarkMode();\n  const { selectedIndex, scrollSnaps, onDotButtonClick } = useDotButton(\n    emblaApi\n  );\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick,\n  } = usePrevNextButtons(emblaApi);\n\n  const tweenScale = useCallback(\n    (api, eventName) => {\n      if (!api) return;\n      const engine = api.internalEngine();\n      const progress = api.scrollProgress();\n      const inView = api.slidesInView();\n      const isScroll = eventName === \"scroll\";\n      const tweenFactor = tweenFactorRef.current;\n\n      api.scrollSnapList().forEach((snap, idx) => {\n        let diff = snap - progress;\n        const regs = engine.slideRegistry[idx];\n        if (isScroll && !inView.includes(regs[0])) return;\n        if (engine.options.loop) {\n          engine.slideLooper.loopPoints.forEach((lp) => {\n            const t = lp.target();\n            if (regs[0] === lp.index && t !== 0) {\n              diff = t < 0 ? snap - (1 + progress) : snap + (1 - progress);\n            }\n          });\n        }\n        const val = 1 - Math.abs(diff * tweenFactor);\n        const scale = numberWithinRange(val, 0.3, 1);\n        const node = tweenNodesRef.current[regs[0]];\n        if (node) node.style.transform = `scale(${scale})`;\n      });\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    tweenFactorRef.current =\n      TWEEN_FACTOR_BASE * emblaApi.scrollSnapList().length;\n    tweenNodesRef.current = emblaApi\n      .slideNodes()\n      .map((slide) => slide.querySelector(\".slide-scaler\"));\n    tweenScale(emblaApi);\n    const handleReInit = () => {\n      tweenFactorRef.current =\n        TWEEN_FACTOR_BASE * emblaApi.scrollSnapList().length;\n      tweenNodesRef.current = emblaApi\n        .slideNodes()\n        .map((slide) => slide.querySelector(\".slide-scaler\"));\n      tweenScale(emblaApi);\n    };\n    emblaApi.on(\"reInit\", handleReInit);\n    emblaApi.on(\"scroll\", () => tweenScale(emblaApi, \"scroll\"));\n    emblaApi.on(\"slideFocus\", () => tweenScale(emblaApi));\n    return () => {\n      emblaApi.off(\"reInit\", handleReInit);\n      emblaApi.off(\"scroll\", () => tweenScale(emblaApi, \"scroll\"));\n      emblaApi.off(\"slideFocus\", () => tweenScale(emblaApi));\n    };\n  }, [emblaApi, tweenScale]);\n\n  const slides = React.useMemo(\n    () =>\n      React.Children.map(children, (child, idx) => (\n        <div key={idx} className=\"flex-none w-full md:w-1/2 transform-gpu\">\n          <div className=\"slide-scaler transition-transform duration-150 ease-out will-change-transform\">\n            {child}\n          </div>\n        </div>\n      )),\n    [children]\n  );\n\n  const dots = React.useMemo(\n    () =>\n      scrollSnaps.map((_, i) => {\n        const isActive = i === selectedIndex;\n        const bgColor = isDarkMode\n          ? isActive\n            ? \"#35BDFD\"\n            : \"#23272b\"\n          : isActive\n          ? \"#1D4ED8\"\n          : \"lightGray\";\n\n        return (\n          <div\n            key={i}\n            className=\"relative flex items-center justify-center group\"\n          >\n            <div\n              className={`absolute w-[18px] h-[18px] ${\n                isActive ? \"w-[30px] h-[10px] rounded-lg\" : \"rounded-full\"\n              } \n               appGradient opacity-30 scale-0 transition-all duration-300\n               group-hover:opacity-100 group-hover:scale-100`}\n            />\n            <DotButton\n              onClick={() => onDotButtonClick(i)}\n              className={`relative cursor-pointer transition-all duration-300 focus:outline-none ${\n                isActive\n                  ? \"w-[25px] h-[11px] rounded-lg\"\n                  : \"w-[10px] h-[10px] md:w-[13px] md:h-[13px] rounded-full\"\n              }`}\n              style={{\n                background: bgColor,\n                boxShadow:\n                  \"1px 4px 2px -3px rgba(0,0,0,0.7) inset, -1px -3px 3px -2px rgba(255,255,255,0.2) inset\",\n              }}\n              aria-label={`Go to slide ${i + 1}`}\n            />\n          </div>\n        );\n      }),\n    [scrollSnaps, selectedIndex, isDarkMode, onDotButtonClick]\n  );\n\n  return (\n    <div className=\"hidden md:block md:max-w-6xl mx-auto\">\n      <div className=\"flex justify-center md:justify-end space-x-6\">\n        <PrevButton onClick={onPrevButtonClick} disabled={prevBtnDisabled} />\n        <NextButton onClick={onNextButtonClick} disabled={nextBtnDisabled} />\n      </div>\n      <div\n        ref={emblaRef}\n        className={`overflow-hidden transition-opacity duration-200 ${\n          emblaApi ? \"opacity-100\" : \"opacity-0\"\n        }`}\n      >\n        <div className=\"flex gap-4\">{slides}</div>\n      </div>\n      <div className=\"mt-6 relative\">\n        <div className=\"absolute mt-2 md:mt-4 left-1/2 top-0 transform -translate-x-1/2 flex space-x-2\">\n          {dots}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(EmblaCarousel);\n","import { CreateOptionsType } from 'embla-carousel'\n\nexport type RootNodeType =\n  | null\n  | ((emblaRoot: HTMLElement) => HTMLElement | null)\n\nexport type OptionsType = CreateOptionsType<{\n  direction: 'forward' | 'backward'\n  speed: number\n  startDelay: number\n  playOnInit: boolean\n  stopOnFocusIn: boolean\n  stopOnInteraction: boolean\n  stopOnMouseEnter: boolean\n  rootNode: RootNodeType\n}>\n\nexport const defaultOptions: OptionsType = {\n  direction: 'forward',\n  speed: 2,\n  startDelay: 1000,\n  active: true,\n  breakpoints: {},\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  rootNode: null\n}\n","import { OptionsType, defaultOptions } from './Options'\nimport { getAutoScrollRootNode } from './utils'\nimport {\n  CreatePluginType,\n  OptionsHandlerType,\n  EmblaCarouselType,\n  EngineType,\n  ScrollBodyType\n} from 'embla-carousel'\n\ndeclare module 'embla-carousel' {\n  interface EmblaPluginsType {\n    autoScroll: AutoScrollType\n  }\n\n  interface EmblaEventListType {\n    autoScrollPlay: 'autoScroll:play'\n    autoScrollStop: 'autoScroll:stop'\n  }\n}\n\nexport type AutoScrollType = CreatePluginType<\n  {\n    play: (delay?: number) => void\n    stop: () => void\n    reset: () => void\n    isPlaying: () => boolean\n  },\n  OptionsType\n>\n\nexport type AutoScrollOptionsType = AutoScrollType['options']\n\nfunction AutoScroll(userOptions: AutoScrollOptionsType = {}): AutoScrollType {\n  let options: OptionsType\n  let emblaApi: EmblaCarouselType\n  let destroyed: boolean\n  let startDelay: number\n  let timerId = 0\n  let autoScrollActive = false\n  let mouseIsOver = false\n  let defaultScrollBehaviour: ScrollBodyType\n\n  function init(\n    emblaApiInstance: EmblaCarouselType,\n    optionsHandler: OptionsHandlerType\n  ): void {\n    emblaApi = emblaApiInstance\n\n    const { mergeOptions, optionsAtMedia } = optionsHandler\n    const optionsBase = mergeOptions(defaultOptions, AutoScroll.globalOptions)\n    const allOptions = mergeOptions(optionsBase, userOptions)\n    options = optionsAtMedia(allOptions)\n\n    if (emblaApi.scrollSnapList().length <= 1) return\n\n    startDelay = options.startDelay\n    destroyed = false\n    defaultScrollBehaviour = emblaApi.internalEngine().scrollBody\n\n    const { eventStore } = emblaApi.internalEngine()\n    const isDraggable = !!emblaApi.internalEngine().options.watchDrag\n    const root = getAutoScrollRootNode(emblaApi, options.rootNode)\n\n    if (isDraggable) {\n      emblaApi.on('pointerDown', pointerDown)\n    }\n\n    if (isDraggable && !options.stopOnInteraction) {\n      emblaApi.on('pointerUp', pointerUp)\n    }\n\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', mouseEnter)\n    }\n\n    if (options.stopOnMouseEnter && !options.stopOnInteraction) {\n      eventStore.add(root, 'mouseleave', mouseLeave)\n    }\n\n    if (options.stopOnFocusIn) {\n      emblaApi.on('slideFocusStart', stopAutoScroll)\n    }\n\n    if (options.stopOnFocusIn && !options.stopOnInteraction) {\n      eventStore.add(emblaApi.containerNode(), 'focusout', startAutoScroll)\n    }\n\n    if (options.playOnInit) startAutoScroll()\n  }\n\n  function destroy(): void {\n    emblaApi\n      .off('pointerDown', pointerDown)\n      .off('pointerUp', pointerUp)\n      .off('slideFocusStart', stopAutoScroll)\n      .off('settle', settle)\n\n    stopAutoScroll()\n    destroyed = true\n    autoScrollActive = false\n  }\n\n  function startAutoScroll(): void {\n    if (destroyed) return\n    if (autoScrollActive) return\n    emblaApi.emit('autoScroll:play')\n\n    const engine = emblaApi.internalEngine()\n    const { ownerWindow } = engine\n\n    timerId = ownerWindow.setTimeout(() => {\n      engine.scrollBody = createAutoScrollBehaviour(engine)\n      engine.animation.start()\n    }, startDelay)\n\n    autoScrollActive = true\n  }\n\n  function stopAutoScroll(): void {\n    if (destroyed) return\n    if (!autoScrollActive) return\n    emblaApi.emit('autoScroll:stop')\n\n    const engine = emblaApi.internalEngine()\n    const { ownerWindow } = engine\n\n    engine.scrollBody = defaultScrollBehaviour\n    ownerWindow.clearTimeout(timerId)\n    timerId = 0\n\n    autoScrollActive = false\n  }\n\n  function createAutoScrollBehaviour(engine: EngineType): ScrollBodyType {\n    const {\n      location,\n      previousLocation,\n      offsetLocation,\n      target,\n      scrollTarget,\n      index,\n      indexPrevious,\n      limit: { reachedMin, reachedMax, constrain },\n      options: { loop }\n    } = engine\n    const directionSign = options.direction === 'forward' ? -1 : 1\n    const noop = (): ScrollBodyType => self\n\n    let bodyVelocity = 0\n    let scrollDirection = 0\n    let rawLocation = location.get()\n    let rawLocationPrevious = 0\n    let hasSettled = false\n\n    function seek(): ScrollBodyType {\n      let directionDiff = 0\n\n      previousLocation.set(location)\n\n      bodyVelocity = directionSign * options.speed\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity)\n      target.set(location)\n\n      directionDiff = rawLocation - rawLocationPrevious\n      scrollDirection = Math.sign(directionDiff)\n      rawLocationPrevious = rawLocation\n\n      const currentIndex = scrollTarget.byDistance(0, false).index\n\n      if (index.get() !== currentIndex) {\n        indexPrevious.set(index.get())\n        index.set(currentIndex)\n        emblaApi.emit('select')\n      }\n\n      const reachedEnd =\n        options.direction === 'forward'\n          ? reachedMin(offsetLocation.get())\n          : reachedMax(offsetLocation.get())\n\n      if (!loop && reachedEnd) {\n        hasSettled = true\n        const constrainedLocation = constrain(location.get())\n        location.set(constrainedLocation)\n        target.set(location)\n        stopAutoScroll()\n      }\n\n      return self\n    }\n\n    const self: ScrollBodyType = {\n      direction: () => scrollDirection,\n      duration: () => -1,\n      velocity: () => bodyVelocity,\n      settled: () => hasSettled,\n      seek,\n      useBaseFriction: noop,\n      useBaseDuration: noop,\n      useFriction: noop,\n      useDuration: noop\n    }\n    return self\n  }\n\n  function pointerDown(): void {\n    if (!mouseIsOver) stopAutoScroll()\n  }\n\n  function pointerUp(): void {\n    if (!mouseIsOver) startAutoScrollOnSettle()\n  }\n\n  function mouseEnter(): void {\n    mouseIsOver = true\n    stopAutoScroll()\n  }\n\n  function mouseLeave(): void {\n    mouseIsOver = false\n    startAutoScroll()\n  }\n\n  function settle(): void {\n    emblaApi.off('settle', settle)\n    startAutoScroll()\n  }\n\n  function startAutoScrollOnSettle(): void {\n    emblaApi.on('settle', settle)\n  }\n\n  function play(startDelayOverride?: number): void {\n    if (typeof startDelayOverride !== 'undefined') {\n      startDelay = startDelayOverride\n    }\n    startAutoScroll()\n  }\n\n  function stop(): void {\n    if (autoScrollActive) stopAutoScroll()\n  }\n\n  function reset(): void {\n    if (autoScrollActive) {\n      stopAutoScroll()\n      startAutoScrollOnSettle()\n    }\n  }\n\n  function isPlaying(): boolean {\n    return autoScrollActive\n  }\n\n  const self: AutoScrollType = {\n    name: 'autoScroll',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  }\n  return self\n}\n\ndeclare namespace AutoScroll {\n  let globalOptions: AutoScrollOptionsType | undefined\n}\n\nAutoScroll.globalOptions = undefined\n\nexport default AutoScroll\n","import { EmblaCarouselType } from 'embla-carousel/components/EmblaCarousel'\nimport { RootNodeType } from './Options'\n\nexport function getAutoScrollRootNode(\n  emblaApi: EmblaCarouselType,\n  rootNode: RootNodeType\n): HTMLElement {\n  const emblaRootNode = emblaApi.rootNode()\n  return (rootNode && rootNode(emblaRootNode)) || emblaRootNode\n}\n","// EmblaCarouselAutoScroll.jsx\n\nimport React, { useEffect, useCallback } from \"react\";\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport AutoScroll from \"embla-carousel-auto-scroll\";\n\nconst EmblaCarouselAutoScroll = ({ options, children }) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    options,\n    [AutoScroll({ playOnInit: true })]\n  );\n\n  const syncAutoScroll = useCallback(() => {\n    // no-op function to keep lifecycle in sync\n  }, []);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    const plugin = emblaApi.plugins().autoScroll;\n    if (!plugin) return;\n    emblaApi.on(\"autoScroll:play\", syncAutoScroll);\n    emblaApi.on(\"autoScroll:stop\", syncAutoScroll);\n    emblaApi.on(\"reInit\", syncAutoScroll);\n    return () => {\n      emblaApi.off(\"autoScroll:play\", syncAutoScroll);\n      emblaApi.off(\"autoScroll:stop\", syncAutoScroll);\n      emblaApi.off(\"reInit\", syncAutoScroll);\n    };\n  }, [emblaApi, syncAutoScroll]);\n\n  const stopScroll = useCallback(() => {\n    emblaApi?.plugins()?.autoScroll?.stop();\n  }, [emblaApi]);\n\n  const playScroll = useCallback(() => {\n    emblaApi?.plugins()?.autoScroll?.play();\n  }, [emblaApi]);\n\n  const slides = React.useMemo(\n    () =>\n      React.Children.map(children, (child, idx) => (\n        <div className=\"flex-none w-full min-w-0 pl-4\" key={idx}>\n          {child}\n        </div>\n      )),\n    [children]\n  );\n\n  return (\n    <div className=\"max-w-[48rem] mx-auto\">\n      <div\n        className=\"overflow-hidden\"\n        ref={emblaRef}\n        onPointerDown={stopScroll}\n        onPointerUp={playScroll}\n        onPointerLeave={playScroll}\n      >\n        <div className=\"flex -ml-4 touch-pan-y [touch-action:pan-y_pin‍ch-zoom]\">\n          {slides}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(EmblaCarouselAutoScroll);\n","// CertificationsModal.jsx\n\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst CertificationsModal = React.memo(({ image, onClose }) =>\n  createPortal(\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-75\"\n      onClick={onClose}\n    >\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          onClose();\n        }}\n        aria-label=\"Close\"\n        className=\"absolute top-4 right-4 z-60 bg-white/80 dark:bg-black/60 rounded-full p-2.5\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 14 14\"\n          width=\"1em\"\n          height=\"1em\"\n          className=\"w-5 h-5 text-rose-600 dark:text-rose-300 hover:text-rose-800 dark:hover:text-rose-600 transition-colors duration-300 cursor-pointer\"\n        >\n          <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M.293.293a1 1 0 0 1 1.414 0l1.397 1.396L4.146.646A.5.5 0 0 1 5 1v3.5a.5.5 0 0 1-.5.5H1a.5.5 0 0 1-.354-.854L1.69 3.104L.293 1.707a1 1 0 0 1 0-1.414m9.016.245a.5.5 0 0 1 .545.108l1.043 1.043L12.293.293a1 1 0 1 1 1.414 1.414l-1.396 1.397l1.043 1.042A.5.5 0 0 1 13 5H9.5a.5.5 0 0 1-.5-.5V1a.5.5 0 0 1 .309-.462M1 9a.5.5 0 0 0-.354.854l1.043 1.043l-1.396 1.396a1 1 0 1 0 1.414 1.414l1.397-1.396l1.042 1.043A.5.5 0 0 0 5 13V9.5a.5.5 0 0 0-.5-.5zm8 .5a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 .354.854l-1.043 1.043l1.396 1.396a1 1 0 0 1-1.414 1.414l-1.397-1.396l-1.042 1.043A.5.5 0 0 1 9 13z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n\n      <div\n        className=\"relative max-w-3xl w-full p-4 rounded-xl\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <img\n          src={image}\n          alt=\"Certification Full View\"\n          className=\"w-full h-auto rounded-xl\"\n        />\n      </div>\n    </div>,\n    document.body\n  )\n);\n\nexport default CertificationsModal;\n","// CertificationsCard.jsx\n\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { certificationsGradientMap } from \"../Resume.constants\";\nimport { slugify } from \"../../layouts/Utils\";\nimport { useDarkMode } from \"../../layouts/DarkMode\";\nimport CertificationsModal from \"./CertificationsModal\";\nimport { BiExpand } from \"react-icons/bi\";\n\nconst CertificationsCard = ({ item }) => {\n  const isDarkMode = useDarkMode();\n  const cardSlug = slugify(item.title);\n  const gradients = certificationsGradientMap[cardSlug];\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const { points = [] } = item;\n\n  const computedHoverStyle = useMemo(\n    () =>\n      isHovered && gradients\n        ? { backgroundImage: isDarkMode ? gradients.dark : gradients.light }\n        : {},\n    [isHovered, gradients, isDarkMode]\n  );\n\n  const toggleModal = useCallback(() => {\n    setIsModalOpen((prev) => !prev);\n  }, []);\n\n  const bulletPoints = useMemo(\n    () =>\n      (isExpanded ? points : points.slice(0, 3)).map((point, idx) => (\n        <li\n          key={idx}\n          className=\"mb-2 marker:text-blue-700 dark:marker:text-cyan-400\"\n        >\n          <div className=\"text-sm font-medium text-gray-500 dark:text-gray-400 group-hover:text-black dark:group-hover:text-white duration-300 break-all\">\n            {point}\n          </div>\n        </li>\n      )),\n    [isExpanded, points]\n  );\n\n  return (\n    <>\n      <div\n        className=\"w-full p-6 md:p-8 lg:p-10 rounded-2xl cardView group cursor-pointer\"\n        style={computedHoverStyle}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div className=\"flex flex-col gap-6 transform transition-transform duration-300 ease-in-out\">\n          <div className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 pb-[56.25%] relative overflow-hidden rounded-xl\">\n            <img\n              className=\"absolute top-0 left-0 w-full h-full object-contain rounded-xl group-hover:scale-105 duration-300 cursor-pointer\"\n              src={item.image}\n              alt={`${item.title} certification`}\n            />\n            <div className=\"absolute top-0 right-0 p-2.5 bg-white/80 dark:bg-black/60 rounded-full \">\n              <BiExpand\n                className=\"w-5 h-5 text-rose-400  group-hover:text-rose-600 dark:text-rose-600 dark:group-hover:text-rose-400 duration-300 cursor-pointer\"\n                onClick={toggleModal}\n                aria-label=\"Expand\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center flex-wrap gap-2 textGradient font-titleFont\">\n            <h3 className=\"text-lg font-bold group-hover:text-black dark:group-hover:text-white\">\n              {item.title}\n            </h3>\n            <span className=\"text-lg font-semibold group-hover:text-black dark:group-hover:text-white\">\n              ({item.platform})\n            </span>\n          </div>\n\n          <div>\n            <h4 className=\"font-titleFont text-md text-gray-700 group-hover:text-black dark:text-gray-300 dark:group-hover:text-white font-semibold\">\n              Learnings:\n            </h4>\n            {points.length > 0 && (\n              <ul className=\"list-disc ml-6 font-bodyFont group mt-2\">\n                {bulletPoints}\n              </ul>\n            )}\n\n            {points.length > 3 && (\n              <button\n                onClick={() => setIsExpanded((prev) => !prev)}\n                className=\"arrowIcon text-sm text-center font-semibold font-bodyFont hover:underline mt-1 tracking-[1px]\"\n                aria-label=\"Toggle Bullet Points\"\n              >\n                {isExpanded ? \"Read Less\" : \"Read More\"}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && (\n        <CertificationsModal image={item.image} onClose={toggleModal} />\n      )}\n    </>\n  );\n};\n\nexport default React.memo(CertificationsCard);\n\n","// Certifications.jsx\n\nimport { motion } from \"framer-motion\";\nimport React, { useMemo } from \"react\";\nimport EmblaCarouselScale from \"./embla-carousel-scale/EmblaCarousel\";\nimport EmblaCarouselAutoScroll from \"./embla-carousel-autoscroll/EmblaCarousel\";\nimport CertificationsCard from \"./CertificationsCard\";\nimport { certificationsData } from \"../Resume.constants\";\n\nconst SCALE_OPTIONS = { align: \"center\", loop: true };\nconst AUTOSCROLL_OPTIONS = { loop: true };\n\nconst Certifications = () => {\n  const scaleCards = useMemo(\n    () =>\n      certificationsData.map((item) => (\n        <CertificationsCard key={item.id} item={item} />\n      )),\n    []\n  );\n  const autoScrollCards = useMemo(\n    () =>\n      certificationsData.map((item) => (\n        <CertificationsCard key={item.id} item={item} />\n      )),\n    []\n  );\n\n  return (\n    <section id=\"features\" className=\"w-full px-4 py-12\">\n      <div className=\"pb-12 flex flex-col gap-4 font-titleFont\">\n        <p className=\"text-sm font-bodyFont font-semibold tracking-wide arrowIcon\">\n          2022 - {new Date().getFullYear()}\n        </p>\n        <motion.h2\n          className=\"text-4xl font-bold \"\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, ease: \"easeInOut\" }}\n          viewport={{ once: true }}\n        >\n          Certifications\n        </motion.h2>\n      </div>\n      <div className=\"w-full\">\n        <div className=\"hidden md:block\">\n          <EmblaCarouselScale options={SCALE_OPTIONS}>\n            {scaleCards}\n          </EmblaCarouselScale>\n        </div>\n        <div className=\"block md:hidden\">\n          <EmblaCarouselAutoScroll options={AUTOSCROLL_OPTIONS}>\n            {autoScrollCards}\n          </EmblaCarouselAutoScroll>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(Certifications);\n"],"names":["PrevButton","React","_ref","onClick","disabled","_jsx","className","children","concat","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","NextButton","_ref2","type","style","opacity","cursor","DotButton","props","_objectWithoutProperties","_excluded","_objectSpread","EmblaCarousel","options","emblaRef","emblaApi","useEmblaCarousel","tweenFactorRef","useRef","tweenNodesRef","isDarkMode","useDarkMode","selectedIndex","scrollSnaps","onDotButtonClick","setSelectedIndex","setScrollSnaps","index","scrollTo","scrollSnapList","selectedScrollSnap","onSelect","on","off","useDotButton","prevBtnDisabled","nextBtnDisabled","onPrevButtonClick","onNextButtonClick","setPrevBtnDisabled","useState","setNextBtnDisabled","useEffect","canScrollPrev","canScrollNext","useCallback","scrollPrev","scrollNext","usePrevNextButtons","tweenScale","api","eventName","engine","internalEngine","progress","scrollProgress","inView","slidesInView","isScroll","tweenFactor","current","forEach","snap","idx","diff","regs","slideRegistry","includes","loop","slideLooper","loopPoints","lp","t","target","val","Math","abs","scale","number","min","max","numberWithinRange","node","transform","length","slideNodes","map","slide","querySelector","handleReInit","slides","child","dots","_","i","isActive","bgColor","_jsxs","background","boxShadow","ref","defaultOptions","direction","speed","startDelay","active","breakpoints","playOnInit","stopOnFocusIn","stopOnInteraction","stopOnMouseEnter","rootNode","AutoScroll","destroyed","defaultScrollBehaviour","userOptions","arguments","undefined","timerId","autoScrollActive","mouseIsOver","startAutoScroll","emit","ownerWindow","setTimeout","scrollBody","location","previousLocation","offsetLocation","scrollTarget","indexPrevious","limit","reachedMin","reachedMax","constrain","directionSign","noop","self","bodyVelocity","scrollDirection","rawLocation","get","rawLocationPrevious","hasSettled","seek","directionDiff","set","add","sign","currentIndex","byDistance","reachedEnd","constrainedLocation","stopAutoScroll","duration","velocity","settled","useBaseFriction","useBaseDuration","useFriction","useDuration","createAutoScrollBehaviour","animation","start","clearTimeout","pointerDown","pointerUp","startAutoScrollOnSettle","mouseEnter","mouseLeave","settle","name","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","globalOptions","allOptions","eventStore","isDraggable","watchDrag","root","emblaRootNode","getAutoScrollRootNode","containerNode","destroy","play","startDelayOverride","stop","reset","isPlaying","EmblaCarouselAutoScroll","syncAutoScroll","plugins","autoScroll","stopScroll","_emblaApi$plugins","_emblaApi$plugins$aut","playScroll","_emblaApi$plugins2","_emblaApi$plugins2$au","onPointerDown","onPointerUp","onPointerLeave","image","onClose","createPortal","e","stopPropagation","xmlns","width","height","fillRule","clipRule","src","alt","document","body","CertificationsCard","item","cardSlug","slugify","title","gradients","certificationsGradientMap","isHovered","setIsHovered","isModalOpen","setIsModalOpen","isExpanded","setIsExpanded","points","computedHoverStyle","useMemo","backgroundImage","dark","light","toggleModal","prev","bulletPoints","slice","point","_Fragment","onMouseEnter","onMouseLeave","BiExpand","platform","CertificationsModal","SCALE_OPTIONS","align","AUTOSCROLL_OPTIONS","Certifications","scaleCards","certificationsData","id","autoScrollCards","Date","getFullYear","motion","h2","initial","y","whileInView","transition","ease","viewport","once","EmblaCarouselScale"],"sourceRoot":""}