{"version":3,"file":"static/js/93.2a41c31b.chunk.js","mappings":"2NAiCe,SAASA,EAAmBC,GAA6B,IAA5B,SAAEC,EAAQ,YAAEC,GAAaF,EACnE,MAAM,SAAEG,EAAQ,MAAEC,IAAUC,EAAAA,EAAAA,KACtBC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,QAAU,GAG9DC,EAAUC,EAAAA,GAAgBC,MAAMC,IAAMC,EAAAA,EAAAA,GAAQD,EAAEX,SAAWA,IAEjE,IAAKQ,EAAS,OAAOK,EAAAA,EAAAA,KAAA,OAAAC,SAAK,sBAG1B,MAAMC,EAAYC,GAChBA,EACGC,MAAM,KACNC,KAAKC,GAAMA,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,KACxCC,KAAK,KAEJC,EAA0B,OAAbxB,EAAoB,SAAW,aAC5CyB,EAAcpB,EAAWW,EAASX,GAAYmB,EAEpD,OACEV,EAAAA,EAAAA,KAACY,EAAAA,GAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRlB,GAAO,IACXT,SAAUgB,EAAShB,GACnByB,YAAaA,EACb3B,SAAUA,EACVC,YAAaA,IAGnB,C","sources":["components/projects/ProjectDetailLoader.jsx"],"sourcesContent":["// import React, { useMemo } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { slugify } from \"../layouts/Utils\";\n// import {projectsByCategory} from \"./constants/ProjectDataUtils\";\n\n// const ProjectDetailLoader = React.memo(({ searchQuery, onSearch }) => {\n//   const { category, title: titleSlug } = useParams();\n//   const title = useMemo(() => decodeURIComponent(titleSlug), [titleSlug]);\n//   const projects = useMemo(() => projectsByCategory[category] || [], [category]);\n//   const project = useMemo(() => projects.find((proj) => slugify(proj.title) === title), [projects, title]);\n\n//   if (!projects.length) return <div>Category \"{category}\" not found</div>;\n//   if (!project) return <div>Project \"{title}\" not found</div>;\n\n//   const DetailComponent = project.component;\n//   return (\n//     <DetailComponent\n//       {...project}\n//       searchQuery={searchQuery}\n//       onSearch={onSearch}\n//     />\n//   );\n// });\n\n// export default React.memo(ProjectDetailLoader);\n\n\nimport React from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport ProjectDetail from \"./ProjectDetail\";\nimport { allProjectsList } from \"./constants/ProjectDataUtils\";\nimport { slugify } from \"../layouts/Utils\";\n\nexport default function ProjectDetailLoader({ onSearch, searchQuery }) {\n  const { category, title } = useParams();\n  const location = useLocation();\n  const subParam = new URLSearchParams(location.search).get(\"sub\") || \"\";\n\n  // find project by slugified title\n  const project = allProjectsList.find((p) => slugify(p.title) === title);\n\n  if (!project) return <div>Project not found</div>;\n\n  // map slug back to human label\n  const humanize = (slug) =>\n    slug\n      .split(\"-\")\n      .map((w) => w[0].toUpperCase() + w.slice(1))\n      .join(\" \");\n\n  const defaultSub = category === \"ai\" ? \"All AI\" : \"All Stacks\";\n  const subcategory = subParam ? humanize(subParam) : defaultSub;\n\n  return (\n    <ProjectDetail\n      {...project}\n      category={humanize(category)}\n      subcategory={subcategory}\n      onSearch={onSearch}\n      searchQuery={searchQuery}\n    />\n  );\n}\n"],"names":["ProjectDetailLoader","_ref","onSearch","searchQuery","category","title","useParams","location","useLocation","subParam","URLSearchParams","search","get","project","allProjectsList","find","p","slugify","_jsx","children","humanize","slug","split","map","w","toUpperCase","slice","join","defaultSub","subcategory","ProjectDetail","_objectSpread"],"sourceRoot":""}