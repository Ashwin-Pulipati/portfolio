{"version":3,"file":"static/js/8179.187ea22d.chunk.js","mappings":"mNAsFA,MAKMA,EAASA,KACb,MAAMC,GAAaC,EAAAA,EAAAA,KAEnB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,EAAGE,WAAY,CAAEC,SAAU,KAC/CC,UAAU,wCAAuCC,SAEhDC,EAAAA,GAAWC,KAAI,CAACC,EAAUC,KACzBb,EAAAA,EAAAA,KAAA,OAAoBQ,UAAU,SAAQC,UACpCK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,QAAOC,SAAA,EACpBT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,yEAAwEC,SAClFG,EAASA,SAASG,gBAEpBH,EAASI,cAAcL,KAAI,CAACM,EAAQC,KACnCJ,SAAAA,EAAAA,MAACb,EAAAA,EAAOC,IAAG,CAETM,UAAS,4BAAAW,OACe,gBAAtBP,EAASA,UAA8BM,EAAW,EAC9C,QACA,IACHT,SAAA,EAEHT,EAAAA,EAAAA,KAACC,EAAAA,EAAOmB,GAAE,CACRjB,QAAS,CAAEC,QAAS,EAAGiB,EAAG,IAC1BC,YAAa,CAAElB,QAAS,EAAGiB,EAAG,GAC9Bf,WAAY,CAAEC,SAAU,GAAKgB,KAAM,aACnCC,SAAU,CAAEC,MAAM,GAClBjB,UAAU,gDAA+CC,SAExDQ,EAAOS,SApCNC,EAwCQV,EAAOW,MAxCVC,EAwCiB,GAvCxCC,MAAMC,KAAK,CAAEC,OAAQC,KAAKC,KAAKP,EAAIK,OAASH,KAAS,CAACM,EAAGC,IACvDT,EAAIU,MAAMD,EAAIP,EAAMO,EAAIP,EAAOA,MAsCWlB,KAAI,CAAC2B,EAAOC,KACxCvC,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGoC,MAAO,IAC9BlB,YAAa,CAAElB,QAAS,EAAGoC,MAAO,GAClClC,WAAY,CAAEC,SAAU,GAAKgB,KAAM,WACnCC,SAAU,CAAEC,MAAM,GAClBjB,UAAU,oCAAmCC,SAE5C6B,EAAM3B,KAAI,CAAC8B,EAAMC,KAChB,MAAMC,EAAc,CAClBC,IAAKF,EACLlC,UAAWiC,EAAKjC,WAAa,aAG/B,MAAqB,SAAdiC,EAAKI,MACV7C,EAAAA,EAAAA,KAACyC,EAAKK,WAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTJ,GAAW,IACfK,MAAO,CACLC,MAAOnD,EACH2C,EAAKQ,MACwB,YAA7BR,EAAKQ,MAAMC,cACX,UACAT,EAAKQ,WAIbjD,EAAAA,EAAAA,KAAA,OAAA+C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASJ,GAAW,IAAEQ,IAAKV,EAAKU,IAAKC,IAAKX,EAAKW,MAChD,KA1BEb,OApBJrB,GAtBFmC,IAAC1B,EAAKE,CAyEZ,QA1DKhB,MA8DD,EAIjB,EAAeyC,EAAAA,KAAWzD,E","sources":["components/resume/components/ProfessionalSkills.jsx"],"sourcesContent":["// import { motion } from \"framer-motion\";\n// import React from \"react\";\n// import { useDarkMode } from \"../../layouts/DarkMode\";\n// import { skillsData } from \"../Resume.constants\";\n\n// const Skills = () => {\n//   const isDarkMode = useDarkMode();\n\n//   return (\n//     <motion.div\n//       initial={{ opacity: 0 }}\n//       animate={{ opacity: 1, transition: { duration: 0.5 } }}\n//       className=\"w-full flex flex-col gap-4 px-1 pb-12\"\n//     >\n//       {skillsData.map((category, catIndex) => (\n//         <div key={catIndex} className=\"w-full\">\n//           <div className=\"pt-12\">\n//             <p className=\"text-sm font-bodyFont arrowIcon font-semibold tracking-[2px] uppercase\">\n//               {category.category.toUpperCase()}\n//             </p>\n//             {category.subCategories.map((subCat, subIndex) => (\n//               <motion.div\n//                 key={subIndex}\n//                 className={`pt-6 flex flex-col gap-6 ${\n//                   category.category === \"Development\" && subIndex > 0\n//                     ? \"mt-12\"\n//                     : \"\"\n//                 }`}\n//               >\n//                 <motion.h2\n//                   initial={{ opacity: 0, y: 50 }}\n//                   whileInView={{ opacity: 1, y: 0 }}\n//                   transition={{ duration: 0.5, ease: \"easeInOut\" }}\n//                   viewport={{ once: true }}\n//                   className=\"text-3xl md:text-4xl font-bold font-titleFont\"\n//                 >\n//                   {subCat.title}\n//                 </motion.h2>\n//                 <motion.div\n//                   initial={{ opacity: 0, scale: 0.9 }}\n//                   whileInView={{ opacity: 1, scale: 1 }}\n//                   transition={{ duration: 0.7, ease: \"easeOut\" }}\n//                   viewport={{ once: true }}\n//                   className=\"flex gap-6 items-center flex-wrap\"\n//                 >\n//                   {subCat.items.map((item, itemIndex) => {\n//                     const commonProps = {\n//                       key: itemIndex,\n//                       className: item.className || \"w-11 h-11\",\n//                     };\n                    \n//                     return item.type === \"icon\" ? (\n//                       <item.component\n//                         {...commonProps}\n//                         style={{\n//                           color: isDarkMode\n//                             ? item.color\n//                             : item.color.toLowerCase() === \"#ffffff\"\n//                             ? \"#000000\"\n//                             : item.color,\n//                         }}\n//                       />\n//                     ) : (\n//                       <img {...commonProps} src={item.src} alt={item.alt} />\n//                     );\n//                   })}\n//                 </motion.div>\n//               </motion.div>\n//             ))}\n//           </div>\n//         </div>\n//       ))}\n//     </motion.div>\n//   );\n// };\n\n// export default React.memo(Skills);\n\n\n\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useDarkMode } from \"../../layouts/DarkMode\";\nimport { skillsData } from \"../Resume.constants\";\n\n// Utility to chunk arrays\nconst chunkArray = (arr, size) =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (_, i) =>\n    arr.slice(i * size, i * size + size)\n  );\n\nconst Skills = () => {\n  const isDarkMode = useDarkMode();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, transition: { duration: 0.5 } }}\n      className=\"w-full flex flex-col gap-4 px-1 pb-12\"\n    >\n      {skillsData.map((category, catIndex) => (\n        <div key={catIndex} className=\"w-full\">\n          <div className=\"pt-12\">\n            <p className=\"text-sm font-bodyFont arrowIcon font-semibold tracking-[2px] uppercase\">\n              {category.category.toUpperCase()}\n            </p>\n            {category.subCategories.map((subCat, subIndex) => (\n              <motion.div\n                key={subIndex}\n                className={`pt-6 flex flex-col gap-6 ${\n                  category.category === \"Development\" && subIndex > 0\n                    ? \"mt-12\"\n                    : \"\"\n                }`}\n              >\n                <motion.h2\n                  initial={{ opacity: 0, y: 50 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  viewport={{ once: true }}\n                  className=\"text-3xl md:text-4xl font-bold font-titleFont\"\n                >\n                  {subCat.title}\n                </motion.h2>\n\n                {/* Chunked groups to prevent excessive children */}\n                {chunkArray(subCat.items, 10).map((group, groupIndex) => (\n                  <motion.div\n                    key={groupIndex}\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    whileInView={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.7, ease: \"easeOut\" }}\n                    viewport={{ once: true }}\n                    className=\"flex gap-6 items-center flex-wrap\"\n                  >\n                    {group.map((item, itemIndex) => {\n                      const commonProps = {\n                        key: itemIndex,\n                        className: item.className || \"w-11 h-11\",\n                      };\n\n                      return item.type === \"icon\" ? (\n                        <item.component\n                          {...commonProps}\n                          style={{\n                            color: isDarkMode\n                              ? item.color\n                              : item.color.toLowerCase() === \"#ffffff\"\n                              ? \"#000000\"\n                              : item.color,\n                          }}\n                        />\n                      ) : (\n                        <img {...commonProps} src={item.src} alt={item.alt} />\n                      );\n                    })}\n                  </motion.div>\n                ))}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </motion.div>\n  );\n};\n\nexport default React.memo(Skills);\n"],"names":["Skills","isDarkMode","useDarkMode","_jsx","motion","div","initial","opacity","animate","transition","duration","className","children","skillsData","map","category","catIndex","_jsxs","toUpperCase","subCategories","subCat","subIndex","concat","h2","y","whileInView","ease","viewport","once","title","arr","items","size","Array","from","length","Math","ceil","_","i","slice","group","groupIndex","scale","item","itemIndex","commonProps","key","type","component","_objectSpread","style","color","toLowerCase","src","alt","chunkArray","React"],"sourceRoot":""}