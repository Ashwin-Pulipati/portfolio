{"version":3,"file":"static/js/7173.640a436f.chunk.js","mappings":"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","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n"],"names":["warning","invariant","LayoutGroupContext","createContext","PresenceContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","arguments","length","undefined","buffer","add","indexOf","push","cancel","index","splice","delete","process","i","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","HandoffAppearAnimations","useEffect","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","React__default","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","_objectSpread","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","_len","transformers","_key","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","useUnmountEffect","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","safeToRemove","shallowCompare","next","prev","prevLength","isZeroValueString","isColorString","testProp","splitColor","aName","bName","cName","c","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","velocity","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","maxDuration","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","stop","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","getDefaultTransition","valueKey","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","Promise","resolve","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","notify","then","animateChildren","first","last","_visualElement$makeTa","willChange","animationTypeState","getState","shouldBlockAnimation","hasAnimated","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","PanSession","constructor","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","_excluded2","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","super","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","arr","item","subscriptions","numSubscriptions","getSize","init","useLayoutEffect","frameDuration","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy"],"sourceRoot":""}