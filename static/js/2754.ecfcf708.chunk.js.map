{"version":3,"file":"static/js/2754.ecfcf708.chunk.js","mappings":"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","sources":["components/contact/Contact.constants.js","components/contact/components/ContactBanner.jsx","components/contact/Contact.jsx"],"sourcesContent":["import {\n  FaEnvelope,\n  FaLinkedinIn,\n  FaGithub,\n} from \"react-icons/fa\";\n\nexport const contactMethods = [\n  {\n    id: \"email\",\n    label: \"Email Ashwin Pulipati\",\n    icon: <FaEnvelope className=\"text-red-600 dark:text-red-500\" />,\n    href: \"mailto:ashwinpulipati@gmail.com\",\n    copyText: \"ashwinpulipati@gmail.com\",\n    external: false,\n    copiedColor: \"text-red-600 dark:text-red-500\",\n  },\n  {\n    id: \"linkedin\",\n    label: \"Visit LinkedIn profile of Ashwin Pulipati\",\n    icon: <FaLinkedinIn className=\"text-blue-600\" />,\n    href: \"https://www.linkedin.com/in/ashwinpulipati\",\n    copyText: \"https://www.linkedin.com/in/ashwinpulipati\",\n    external: true,\n    copiedColor: \"text-blue-600\",\n  },\n  {\n    id: \"github\",\n    label: \"Visit GitHub profile of Ashwin Pulipati\",\n    icon: <FaGithub className=\"text-black dark:text-white\" />,\n    href: \"https://github.com/Ashwin-Pulipati\",\n    copyText: \"https://github.com/Ashwin-Pulipati\",\n    external: true,\n    copiedColor: \"\",\n  },\n];\n\n\nexport const groupedInputs = [\n  {\n    groupClass: \"flex flex-wrap gap-6 xs:flex-col sm:flex-col md:flex-row\",\n    fields: [\n      { label: \"Your Name\", name: \"username\", id: \"username\", type: \"text\" },\n      {\n        label: \"Phone Number\",\n        name: \"phoneNumber\",\n        id: \"phoneNumber\",\n        type: \"text\",\n      },\n    ],\n  },\n  {\n    groupClass: \"flex flex-col gap-4 font-titleFont\",\n    fields: [{ label: \"Email\", name: \"email\", id: \"email\", type: \"email\" }],\n  },\n  {\n    groupClass: \"flex flex-col gap-4 font-titleFont\",\n    fields: [\n      { label: \"Subject\", name: \"subject\", id: \"subject\", type: \"text\" },\n    ],\n  },\n  {\n    groupClass: \"flex flex-col gap-4 font-titleFont\",\n    fields: [\n      {\n        label: \"Message\",\n        name: \"message\",\n        id: \"message\",\n        type: \"textarea\",\n        rows: 6,\n      },\n    ],\n  },\n];\n  ","import React, { useState, useCallback } from \"react\";\nimport ContactMe from \"../../../assets/images/Webp/contact-left.webp\";\nimport { createRipple } from \"../../layouts/RippleEffect\";\nimport { motion } from \"framer-motion\";\nimport { contactMethods } from \"../Contact.constants\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nconst ContactLeft = () => {\n  const [copied, setCopied] = useState(\"\");\n\n  const handleCopy = useCallback(\n    (text, type) => {\n      navigator.clipboard.writeText(text).then(() => {\n        setCopied(type);\n        setTimeout(() => setCopied(\"\"), 2000);\n      });\n    },\n    [setCopied]\n  );\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.85 }}\n      whileInView={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 1, ease: \"easeInOut\" }}\n      viewport={{ once: false }}\n      className=\"w-full xl:w-[35%] h-full p-6 md:p-10 lg:p-8 xl:p-9 flex flex-col gap-8 justify-center \n             group hover:bg-gradient-to-br hover:from-[#a0f0f4] hover:via-[#b78fff] hover:to-[#ff9aad] \n             dark:hover:bg-gradient-to-br dark:hover:from-[#0d7998] dark:hover:via-[#4f2a7a] dark:hover:to-[#8a3a48] \n             cardView rounded-lg\"\n    >\n      <div className=\"w-full h-4/5 overflow-hidden rounded-lg\">\n        <img\n          className=\"w-full h-44 md:h-64 object-cover hover:scale-105 duration-300 cursor-pointer\"\n          src={ContactMe}\n          width=\"500\"\n          height=\"300\"\n          alt=\"contactImg\"\n        />\n      </div>\n      <div className=\"flex flex-col gap-4\">\n        <span\n          className=\"pt-3 md:pt-0 lg:pt-0 xs:block md:inline text-3xl md:text-5xl lg:text-4xl xl:text-5xl px-1 w-fit h-fit \n          textGradient group-hover:text-black dark:group-hover:text-white capitalize font-nameFont shadow-textShadow\"\n        >\n          Ashwin Pulipati\n        </span>\n        <p className=\"text-xl font-medium text-gray-700 dark:text-gray-400 group-hover:text-black dark:group-hover:text-text-gray-300\">\n          Full Stack Software Engineer\n        </p>\n        <p className=\"text-md font-normal text-gray-700 dark:text-gray-400 group-hover:text-black dark:group-hover:text-gray-300\">\n          Reach out to me effortlessly through the preferred communication\n          channels below. I value clear and seamless connections, ensuring every\n          interaction is straightforward and efficient.\n        </p>\n      </div>\n      <div className=\"flex flex-col gap-4 group\">\n        <h2 className=\"text-base uppercase font-titleFont mb-4 tracking-[2px] group-hover:text-black dark:group-hover:text-gray-300\">\n          REACH ME OUT\n        </h2>\n        <div className=\"flex gap-6\">\n          {contactMethods.map(\n            ({ id, label, icon, href, copyText, external, copiedColor }) => (\n              <button\n                key={id}\n                className=\"flex flex-col gap-3\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleCopy(copyText, id);\n                  if (external)\n                    window.open(href, \"_blank\", \"noopener,noreferrer\");\n                }}\n                aria-label=\"Contact Me\"\n              >\n                <div\n                  className=\"bannerIcon zoomIcon group-hover:shadow-none ripple-container\"\n                  onMouseDown={createRipple}\n                >\n                  <a\n                    href={href}\n                    aria-label={label}\n                    title={label}\n                    {...(external\n                      ? { target: \"_blank\", rel: \"noopener noreferrer\" }\n                      : {})}\n                  >\n                    {icon}\n                  </a>\n                </div>\n                {copied === id && (\n                  <div\n                    className={`text-xs flex items-center gap-1 mt-1 ${copiedColor}`}\n                  >\n                    <FaCheckCircle />\n                    <span>Copied!</span>\n                  </div>\n                )}\n              </button>\n            )\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default React.memo(ContactLeft);\n\n","import emailjs from \"emailjs-com\";\nimport { motion } from \"framer-motion\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BsPatchExclamationFill } from \"react-icons/bs\";\nimport { PiSealCheckFill } from \"react-icons/pi\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { createRipple } from \"../layouts/RippleEffect\";\nimport Title from \"../layouts/Title\";\nimport ContactBanner from \"./components/ContactBanner\";\nimport { groupedInputs } from \"./Contact.constants\";\nimport \"./Contact.css\";\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    const savedData = localStorage.getItem(\"contactFormData\");\n    if (savedData) {\n      setFormData(JSON.parse(savedData));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contactFormData\", JSON.stringify(formData));\n  }, [formData]);\n\n  const [touched, setTouched] = useState({});\n\n  const validateField = (name, value) =>\n    !value.trim() && name !== \"phoneNumber\"\n      ? \"This is a required field.\"\n      : {\n          email: !value.match(/(@gmail\\.com|\\.edu)$/i)\n            ? \"Use Gmail or student email.\"\n            : \"\",\n          phoneNumber: value.trim()\n            ? value.includes(\"+\")\n              ? \"Please avoid country codes\"\n              : /^\\d{10}$/.test(value)\n              ? \"\"\n              : \"Phone number must be exactly 10 digits\"\n            : \"\",\n        }[name] || \"\";\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\n    setTouched((prev) => ({ ...prev, [name]: true }));\n  }, []);\n\n  const handleSend = useCallback(\n    async (e) => {\n      e.preventDefault();\n      const { username, phoneNumber, email, subject, message } = formData;\n\n      if (!username || !email || !subject || !message) {\n        toast.error(\"All fields are required!\", {\n          className: \"custom-toast\",\n          progressClassName: \"custom-toast-error-progress\",\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n        });\n        return;\n      }\n\n      const emailError = validateField(\"email\", email);\n      const phoneError = validateField(\"phoneNumber\", phoneNumber);\n      if (emailError || phoneError) {\n        toast.error(emailError || phoneError, {\n          className: \"custom-toast\",\n          progressClassName: \"custom-toast-error-progress\",\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n        });\n        return;\n      }\n\n      const templateParams = {\n        subject: subject,\n        to_name: \"Ashwin\",\n        from_name: username,\n        message: message,\n        from_email: email,\n        phone_number: phoneNumber,\n      };\n\n      try {\n        await emailjs.send(\n          process.env.REACT_APP_SERVICE_ID,\n          process.env.REACT_APP_TEMPLATE_ID,\n          templateParams,\n          process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n        );\n        toast.success(\"Message sent successfully!\", {\n          className: \"custom-toast\",\n          progressClassName: \"custom-toast-success-progress\",\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n        });\n        setFormData({\n          username: \"\",\n          phoneNumber: \"\",\n          email: \"\",\n          subject: \"\",\n          message: \"\",\n        });\n        setTouched({});\n      } catch (error) {\n        toast.error(\"Something went wrong. Please try again.\", {\n          className: \"custom-toast\",\n          progressClassName: \"custom-toast-error-progress\",\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n        });\n      }\n    },\n    [formData]\n  );\n\n  const renderField = (field) => {\n    const value = formData[field.name];\n    const errorMessage = touched[field.name]\n      ? validateField(field.name, value)\n      : \"\";\n    const iconStyle = {\n      position: \"absolute\",\n      right: \"16px\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      fontSize: \"18px\",\n    };\n\n    if (field.type === \"textarea\") {\n      return (\n        <fieldset\n          key={field.name}\n          className=\"flex-1 flex flex-col gap-4 font-titleFont\"\n        >\n          <label\n            htmlFor={field.id}\n            className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold uppercase tracking-[2px]\"\n          >\n            {field.label} <span className=\"text-red-500\">*</span>\n          </label>\n          <div className=\"relative\">\n            <div className=\"h-fit w-full rounded-md hoverFocusGradient p-[2px]\">\n              <div className=\"flex h-full rounded-md w-full items-center justify-center font-normal relative\">\n                <textarea\n                  id={field.id}\n                  name={field.name}\n                  value={value}\n                  onChange={handleChange}\n                  rows={field.rows || 4}\n                  className=\"contactTextArea text-gray-600 dark:text-gray-200\"\n                  {...(field.name === \"phoneNumber\" ? {} : { required: true })}\n                ></textarea>\n                {touched[field.name] &&\n                  (errorMessage ? (\n                    <span style={iconStyle}>\n                      <BsPatchExclamationFill className=\"w-4 h-4 text-red-600 dark:text-red-500\" />\n                    </span>\n                  ) : (\n                    <span style={iconStyle}>\n                      <PiSealCheckFill className=\"w-5 h-5 text-green-600 dark:text-green-500\" />\n                    </span>\n                  ))}\n              </div>\n            </div>\n            {touched[field.name] && errorMessage && (\n              <div className=\"text-red-600 dark:text-red-500 text-xs mt-1 ml-1.5\">\n                {errorMessage}\n              </div>\n            )}\n          </div>\n        </fieldset>\n      );\n    } else {\n      return (\n        <fieldset\n          key={field.name}\n          className=\"flex-1 flex flex-col gap-4 font-titleFont\"\n        >\n          <label\n            htmlFor={field.id}\n            className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold uppercase tracking-[2px]\"\n          >\n            {field.label}{\" \"}\n            {field.label !== \"Phone Number\" ? (\n              <span className=\"text-red-500\">*</span>\n            ) : (\n              <span className=\"text-gray-400 italic lowercase\">(Optional)</span>\n            )}\n          </label>\n          <div className=\"relative\">\n            <div\n              className=\"p-0.5 font-normal rounded-md hoverFocusGradient\"\n              style={{ position: \"relative\" }}\n            >\n              <input\n                id={field.id}\n                type={field.type}\n                name={field.name}\n                value={value}\n                onChange={handleChange}\n                {...(field.name === \"phoneNumber\"\n                  ? { maxLength: 10 }\n                  : { required: true })}\n                className=\"contactInput text-gray-600 dark:text-gray-200 \"\n              />\n              {touched[field.name] &&\n                (errorMessage ? (\n                  <span style={iconStyle}>\n                    <BsPatchExclamationFill className=\"w-4 h-4 text-red-600 dark:text-red-500\" />\n                  </span>\n                ) : (\n                  <span style={iconStyle}>\n                    <PiSealCheckFill className=\"w-5 h-5 text-green-600 dark:text-green-500\" />\n                  </span>\n                ))}\n            </div>\n            {touched[field.name] && errorMessage && (\n              <div className=\"text-red-600 dark:text-red-500 text-xs mt-1 ml-1.5\">\n                {errorMessage}\n              </div>\n            )}\n          </div>\n        </fieldset>\n      );\n    }\n  };\n\n  return (\n    <section\n      id=\"contact\"\n      className=\"w-full py-14 px-6 sm:px-8 md:px-12 lg:px-16  xl:px-20 \"\n    >\n      <div className=\"border-b border-b-gray-400 dark:border-b-black pb-20\">\n        <Title title=\"HIRE ME\" des=\"Contact Me\" />\n        <div className=\"w-full\">\n          <div className=\"w-full h-auto flex flex-col lg:flex-row justify-between xs:gap-y-8 md:gap-y-10 lg:gap-8 \">\n            <ContactBanner />\n            <motion.div\n              initial={{ scale: 0.8, opacity: 0 }}\n              whileInView={{ scale: 1, opacity: 1 }}\n              transition={{ duration: 1, ease: \"easeInOut\" }}\n              viewport={{ once: false }}\n              className=\"w-full xl:w-[60%] h-full py-10 px-8 sm:px-6 md:px-10 xl:px-8 xl:py-8 flex flex-col gap-8 cardView rounded-lg\"\n            >\n              <form\n                className=\"flex flex-col gap-4 xl:gap-6 py-2 xl:py-5\"\n                onSubmit={handleSend}\n              >\n                {groupedInputs.map((group, index) => (\n                  <fieldset key={index} className={group.groupClass}>\n                    {group.fields.map((field) => renderField(field))}\n                  </fieldset>\n                ))}\n                <div className=\"group relative inline-block p-0.5 rounded-md bg-transparent hover:rounded-full elevatedShadow\">\n                  <button\n                    type=\"submit\"\n                    className=\"ripple-container w-full relative uppercase z-10 px-6 py-3 text-titleFont font-medium rounded-md \n                    cardGradient hover:bg-none hover:rounded-full hover:bg-green-100 \n                    hover:text-green-800  dark:hover:bg-none dark:hover:bg-green-800 dark:hover:text-green-100 tracking-[2px]\"\n                    onMouseDown={createRipple}\n                    aria-label=\"Send Message\"\n                  >\n                    Send Message\n                  </button>\n                  <span\n                    className=\"absolute inset-0 z-0 rounded-md appGradient opacity-0 group-hover:opacity-100 \n                    transition-opacity duration-300 pointer-events-none group-hover:rounded-full\"\n                  ></span>\n                </div>\n              </form>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        className=\"custom-toast-container\"\n        toastClassName={(context) =>\n          context?.type === \"success\"\n            ? \"custom-toast dark:custom-toast\"\n            : \"custom-toast-error dark:custom-toast-error\"\n        }\n        progressClassName={(context) =>\n          context?.type === \"success\"\n            ? \"custom-toast-success-progress dark:custom-toast-success-progress\"\n            : \"custom-toast-error-progress dark:custom-toast-error-progress\"\n        }\n      />\n    </section>\n  );\n};\n\nexport default React.memo(Contact);\n"],"names":["contactMethods","id","label","icon","_jsx","FaEnvelope","className","href","copyText","external","copiedColor","FaLinkedinIn","FaGithub","groupedInputs","groupClass","fields","name","type","rows","ContactLeft","copied","setCopied","useState","handleCopy","useCallback","text","navigator","clipboard","writeText","then","setTimeout","_jsxs","motion","div","initial","opacity","scale","whileInView","transition","duration","ease","viewport","once","children","src","ContactMe","width","height","alt","map","_ref","onClick","e","preventDefault","window","open","onMouseDown","createRipple","_objectSpread","title","target","rel","concat","FaCheckCircle","React","Contact","formData","setFormData","username","phoneNumber","email","subject","message","useEffect","savedData","localStorage","getItem","JSON","parse","setItem","stringify","touched","setTouched","validateField","value","trim","match","includes","test","handleChange","prevState","prev","handleSend","async","toast","error","progressClassName","position","autoClose","hideProgressBar","emailError","phoneError","templateParams","to_name","from_name","from_email","phone_number","emailjs","process","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_EMAILJS_PUBLIC_KEY","success","Title","des","ContactBanner","onSubmit","group","index","field","errorMessage","iconStyle","right","top","transform","fontSize","htmlFor","onChange","required","style","BsPatchExclamationFill","PiSealCheckFill","maxLength","renderField","ToastContainer","toastClassName","context"],"sourceRoot":""}